DataSetInfo              : [dataset] : Added class "Signal"
                         : Add Tree final_tree of type Signal with 9783 events
DataSetInfo              : [dataset] : Added class "Background"
                         : Add Tree final_tree of type Background with 489081 events
                         : Dataset[dataset] : Class index : 0  name : Signal
                         : Dataset[dataset] : Class index : 1  name : Background
Factory                  : Booking method: [1mPyKeras[0m
                         : 
                         : Setting up tf.keras
                         : Using TensorFlow version 2
                         : Use Keras version from TensorFlow : tf.keras
                         :  Loading Keras Model 
                         : Loaded model from file: TMVA_keras_models/keras_shallow_model_old_TMVA.h5
Factory                  : [1mTrain all methods[0m
                         : Rebuilding Dataset dataset
                         : Building event vectors for type 2 Signal
                         : Dataset[dataset] :  create input formulas for tree final_tree
                         : Building event vectors for type 2 Background
                         : Dataset[dataset] :  create input formulas for tree final_tree
                         : Dataset[dataset] :  create input formulas for tree final_tree
                         : Dataset[dataset] :  create input formulas for tree final_tree
                         : Dataset[dataset] :  create input formulas for tree final_tree
                         : Dataset[dataset] :  create input formulas for tree final_tree
                         : Dataset[dataset] :  create input formulas for tree final_tree
                         : Dataset[dataset] :  create input formulas for tree final_tree
DataSetFactory           : [dataset] : Number of events in input trees
                         : 
                         : 
                         : Dataset[dataset] : Weight renormalisation mode: "EqualNumEvents": renormalises all event classes ...
                         : Dataset[dataset] :  such that the effective (weighted) number of events in each class is the same 
                         : Dataset[dataset] :  (and equals the number of events (entries) given for class=0 )
                         : Dataset[dataset] : ... i.e. such that Sum[i=1..N_j]{w_i} = N_classA, j=classA, classB, ...
                         : Dataset[dataset] : ... (note that N_j is the sum of TRAINING events
                         : Dataset[dataset] :  ..... Testing events are not renormalised nor included in the renormalisation factor!)
                         : Number of training and testing events
                         : ---------------------------------------------------------------------------
                         : Signal     -- training events            : 7827
                         : Signal     -- testing events             : 1956
                         : Signal     -- training and testing events: 9783
                         : Background -- training events            : 391265
                         : Background -- testing events             : 97816
                         : Background -- training and testing events: 489081
                         : 
DataSetInfo              : Correlation matrix (Signal):
                         : ---------------------------------------------------------------------------------------------------
                         :                           C_mu_Ds_BS_ips_xy C_mu1mu2_dr C_mu_Hnl_BS_ips_xy C_mu_Hnl_nValidPixelHits
                         :        C_mu_Ds_BS_ips_xy:            +1.000      -0.034             +0.047                   -0.018
                         :              C_mu1mu2_dr:            -0.034      +1.000             +0.009                   +0.045
                         :       C_mu_Hnl_BS_ips_xy:            +0.047      +0.009             +1.000                   -0.087
                         : C_mu_Hnl_nValidPixelHits:            -0.018      +0.045             -0.087                   +1.000
                         : ---------------------------------------------------------------------------------------------------
DataSetInfo              : Correlation matrix (Background):
                         : ---------------------------------------------------------------------------------------------------
                         :                           C_mu_Ds_BS_ips_xy C_mu1mu2_dr C_mu_Hnl_BS_ips_xy C_mu_Hnl_nValidPixelHits
                         :        C_mu_Ds_BS_ips_xy:            +1.000      +0.086             +0.331                   +0.010
                         :              C_mu1mu2_dr:            +0.086      +1.000             +0.095                   +0.025
                         :       C_mu_Hnl_BS_ips_xy:            +0.331      +0.095             +1.000                   +0.031
                         : C_mu_Hnl_nValidPixelHits:            +0.010      +0.025             +0.031                   +1.000
                         : ---------------------------------------------------------------------------------------------------
DataSetFactory           : [dataset] :  
                         : 
Factory                  : [dataset] : Create Transformation "I" with events from all classes.
                         : 
                         : Transformation, Variable selection : 
                         : Input : variable 'C_mu_Ds_BS_ips_xy' <---> Output : variable 'C_mu_Ds_BS_ips_xy'
                         : Input : variable 'C_mu1mu2_dr' <---> Output : variable 'C_mu1mu2_dr'
                         : Input : variable 'C_mu_Hnl_BS_ips_xy' <---> Output : variable 'C_mu_Hnl_BS_ips_xy'
                         : Input : variable 'C_mu_Hnl_nValidPixelHits' <---> Output : variable 'C_mu_Hnl_nValidPixelHits'
TFHandler_Factory        :                 Variable                        Mean                        RMS                [        Min                        Max ]
                         : -------------------------------------------------------------------------------------------------------------------------------------------
                         :        C_mu_Ds_BS_ips_xy:                    9.2698                    12.085   [                2.9539e-05                    316.81 ]
                         :              C_mu1mu2_dr:                   0.16504                  0.074485   [                0.00047892                   0.56149 ]
                         :       C_mu_Hnl_BS_ips_xy:                    23.443                    25.538   [                1.4458e-05                    316.81 ]
                         : C_mu_Hnl_nValidPixelHits:                    3.3399                   0.94868   [                    0.0000                    9.0000 ]
                         : -------------------------------------------------------------------------------------------------------------------------------------------
                         : Ranking input variables (method unspecific)...
IdTransformation         : Ranking result (top variable is best ranked)
                         : -------------------------------------------------
                         : Rank : Variable                 : Separation
                         : -------------------------------------------------
                         :    1 : C_mu_Hnl_BS_ips_xy       : 3.817e-01
                         :    2 : C_mu_Hnl_nValidPixelHits : 1.144e-01
                         :    3 : C_mu1mu2_dr              : 3.858e-02
                         :    4 : C_mu_Ds_BS_ips_xy        : 1.389e-02
                         : -------------------------------------------------
Factory                  : Train method: PyKeras for Classification
                         : 
                         : 
                         : [1m================================================================[0m
                         : [1mH e l p   f o r   M V A   m e t h o d   [ PyKeras ] :[0m
                         : 
                         : Keras is a high-level API for the Theano and Tensorflow packages.
                         : This method wraps the training and predictions steps of the Keras
                         : Python package for TMVA, so that dataloading, preprocessing and
                         : evaluation can be done within the TMVA system. To use this Keras
                         : interface, you have to generate a model with Keras first. Then,
                         : this model can be loaded and trained in TMVA.
                         : 
                         : 
                         : <Suppress this message by specifying "!H" in the booking option>
                         : [1m================================================================[0m
                         : 
                         : Split TMVA training data in 319274 training events and 79818 validation events
                         : Training Model Summary
running TMVA for signal mN1p0_ctau10
keras_par_string: H:!V:FilenameModel=TMVA_keras_models/keras_shallow_model_old_TMVA.h5:FilenameTrainedModel=TMVA_keras_models/keras_shallow_model_old_TMVA_trained_model.h5:NumEpochs=5:BatchSize=64:Verbose=1
dealing with signal mN1p0_ctau10
signal file name: /home/quibus/hnl_ntuples_for_mva/tree_HnlToMuPi_prompt_DsToNMu_NToMuPi_SoftQCDnonD_noQuarkFilter_mN1p0_ctau10p0mm_TuneCP5_13TeV-pythia8-evtgen_tree_new.root
factory_string: !V:!Silent:Color:DrawProgressBar:AnalysisType=Classification
Model: "sequential_1"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 normalization_1 (Normalizat  (None, 4)                9         
 ion)                                                            
                                                                 
 dense_2 (Dense)             (None, 64)                320       
                                                                 
 dense_3 (Dense)             (None, 2)                 130       
                                                                 
=================================================================
Total params: 459
Trainable params: 450
Non-trainable params: 9
_________________________________________________________________
                         : Option SaveBestOnly: Only model weights with smallest validation loss will be stored
Epoch 1/5
Epoch 1: val_loss improved from inf to 0.01795, saving model to TMVA_keras_models/keras_shallow_model_old_TMVA_trained_model.h5
4989/4989 [==============================] - 22s 4ms/step - loss: 0.0179 - accuracy: 0.8021 - val_loss: 0.0180 - val_accuracy: 0.7968
Epoch 2/5
Epoch 2: val_loss improved from 0.01795 to 0.01726, saving model to TMVA_keras_models/keras_shallow_model_old_TMVA_trained_model.h5
4989/4989 [==============================] - 6s 1ms/step - loss: 0.0171 - accuracy: 0.8060 - val_loss: 0.0173 - val_accuracy: 0.8054
Epoch 3/5
Epoch 3: val_loss improved from 0.01726 to 0.01710, saving model to TMVA_keras_models/keras_shallow_model_old_TMVA_trained_model.h5
4989/4989 [==============================] - 7s 1ms/step - loss: 0.0169 - accuracy: 0.8094 - val_loss: 0.0171 - val_accuracy: 0.8050
Epoch 4/5
Epoch 4: val_loss did not improve from 0.01710
4989/4989 [==============================] - 7s 1ms/step - loss: 0.0168 - accuracy: 0.8096 - val_loss: 0.0172 - val_accuracy: 0.8066
Epoch 5/5
Epoch 5: val_loss did not improve from 0.01710
4989/4989 [==============================] - 6s 1ms/step - loss: 0.0167 - accuracy: 0.8107 - val_loss: 0.0171 - val_accuracy: 0.8083
                         : Getting training history for item:0 name = 'loss'
                         : Getting training history for item:1 name = 'accuracy'
                         : Getting training history for item:2 name = 'val_loss'
                         : Getting training history for item:3 name = 'val_accuracy'
                         : Elapsed time for training with 399092 events: [1;31m106 sec[0m         
                         : Setting up tf.keras
                         : Using TensorFlow version 2
                         : Use Keras version from TensorFlow : tf.keras
                         : Disabled TF eager execution when evaluating model 
                         :  Loading Keras Model 
                         : Loaded model from file: TMVA_keras_models/keras_shallow_model_old_TMVA_trained_model.h5
PyKeras                  : [dataset] : Evaluation of PyKeras on training sample (399092 events)
                         : Elapsed time for evaluation of 399092 events: [1;31m3.82 sec[0m       
                         : Creating xml weight file: [0;36mdataset/weights/TMVAClassification_PyKeras.weights.xml[0m
                         : Creating standalone class: [0;36mdataset/weights/TMVAClassification_PyKeras.class.C[0m
Factory                  : Training finished
                         : 
                         : Ranking input variables (method specific)...
                         : No variable ranking supplied by classifier: PyKeras
TH1.Print Name  = TrainingHistory_PyKeras_'accuracy', Entries= 0, Total sum= 4.03779
TH1.Print Name  = TrainingHistory_PyKeras_'loss', Entries= 0, Total sum= 0.0852648
TH1.Print Name  = TrainingHistory_PyKeras_'val_accuracy', Entries= 0, Total sum= 4.02191
TH1.Print Name  = TrainingHistory_PyKeras_'val_loss', Entries= 0, Total sum= 0.0866052
Factory                  : === Destroy and recreate all methods via weight files for testing ===
                         : 
                         : Reading weight file: [0;36mdataset/weights/TMVAClassification_PyKeras.weights.xml[0m
Factory                  : [1mTest all methods[0m
Factory                  : Test method: PyKeras for Classification performance
                         : 
                         : Setting up tf.keras
                         : Using TensorFlow version 2
                         : Use Keras version from TensorFlow : tf.keras
                         : Disabled TF eager execution when evaluating model 
                         :  Loading Keras Model 
                         : Loaded model from file: TMVA_keras_models/keras_shallow_model_old_TMVA_trained_model.h5
PyKeras                  : [dataset] : Evaluation of PyKeras on testing sample (99772 events)
                         : Elapsed time for evaluation of 99772 events: [1;31m0.914 sec[0m       
Factory                  : [1mEvaluate all methods[0m
Factory                  : Evaluate classifier: PyKeras
                         : 
PyKeras                  : [dataset] : Loop over test events and fill histograms with classifier response...
                         : 
TFHandler_PyKeras        :                 Variable                        Mean                        RMS                [        Min                        Max ]
                         : -------------------------------------------------------------------------------------------------------------------------------------------
                         :        C_mu_Ds_BS_ips_xy:                    8.8281                    11.265   [                9.3854e-05                    323.18 ]
                         :              C_mu1mu2_dr:                   0.16406                  0.071900   [                0.00052184                   0.53738 ]
                         :       C_mu_Hnl_BS_ips_xy:                    27.663                    27.121   [                7.3862e-05                    257.46 ]
                         : C_mu_Hnl_nValidPixelHits:                    3.2599                   0.96935   [                    0.0000                    7.0000 ]
                         : -------------------------------------------------------------------------------------------------------------------------------------------
                         : 
                         : Evaluation results ranked by best signal efficiency and purity (area)
                         : -------------------------------------------------------------------------------------------------------------------
                         : DataSet       MVA                       
                         : Name:         Method:          ROC-integ
                         : dataset       PyKeras        : 0.892
                         : -------------------------------------------------------------------------------------------------------------------
                         : 
                         : Testing efficiency compared to training efficiency (overtraining check)
                         : -------------------------------------------------------------------------------------------------------------------
                         : DataSet              MVA              Signal efficiency: from test sample (from training sample) 
                         : Name:                Method:          @B=0.01             @B=0.10            @B=0.30   
                         : -------------------------------------------------------------------------------------------------------------------
                         : dataset              PyKeras        : 0.343 (0.345)       0.724 (0.730)      0.881 (0.882)
                         : -------------------------------------------------------------------------------------------------------------------
                         : 
Dataset:dataset          : Created tree 'TestTree' with 99772 events
                         : 
Dataset:dataset          : Created tree 'TrainTree' with 399092 events
                         : 
Factory                  : [1mThank you for using TMVA![0m
                         : [1mFor citation information, please visit: http://tmva.sf.net/citeTMVA.html[0m
